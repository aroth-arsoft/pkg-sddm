#!/bin/sh

set -e

. /usr/share/debconf/confmodule

THIS_PACKAGE=sddm
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

# creating sddm group if he isn't already there
if ! getent group sddm >/dev/null; then
        addgroup --system sddm
fi

# creating sddm user if he isn't already there
if ! getent passwd sddm >/dev/null; then
        adduser --system --ingroup sddm --home /var/lib/sddm sddm
        usermod -c "SDDM Display Manager" sddm
        usermod -d "/var/lib/sddm"      sddm
        usermod -g "sddm"               sddm
        usermod -s "/bin/false"            sddm
fi

# Creating nopasswdlogin group if he isn't already there.
# That enables the password-less login feature in the users-admin
# tool of the gnome-system-tools for users that belong to it,
# and which is working thanks to SDDM's PAM policy.
if ! getent group nopasswdlogin >/dev/null; then
        addgroup --system nopasswdlogin
fi

if [ -d /var/lib/sddm ]; then
  chown -R sddm:sddm /var/lib/sddm
  chmod 0750 /var/lib/sddm
fi

# debconf is not a registry, so we only fiddle with the default file if it
# does not exist
if ! [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
  DEFAULT_DISPLAY_MANAGER=
  if db_get shared/default-x-display-manager; then
    DEFAULT_DISPLAY_MANAGER="$RET"
  fi
  if [ -n "$DEFAULT_DISPLAY_MANAGER" ]; then
    DAEMON_NAME=
    if db_get "$DEFAULT_DISPLAY_MANAGER"/daemon_name; then
      DAEMON_NAME="$RET"
    fi
    if [ -z "$DAEMON_NAME" ]; then
      # if we were unable to determine the name of the selected daemon (for
      # instance, if the selected default display manager doesn't provide a
      # daemon_name question), guess
      DAEMON_NAME=$(which "$DEFAULT_DISPLAY_MANAGER" 2>/dev/null)
    fi
    if [ -n "$DAEMON_NAME" ]; then
      echo "$DAEMON_NAME" > "$DEFAULT_DISPLAY_MANAGER_FILE"
    fi
  fi
fi

# debconf hangs if sddm gets started below without this
db_stop || true

DEFAULT_SERVICE=/etc/systemd/system/display-manager.service
# set default-display-manager systemd service link according to our config
if [ "$1" = configure ] && [ -d /etc/systemd/system/ ]; then
  if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
    SERVICE=/lib/systemd/system/$(basename $(cat "$DEFAULT_DISPLAY_MANAGER_FILE")).service
    if [ -h "$DEFAULT_SERVICE" ] && [ $(readlink "$DEFAULT_SERVICE") = /dev/null ]; then
      echo "Display manager service is masked" >&2
    elif [ -e "$SERVICE" ]; then
      ln -sf "$SERVICE" "$DEFAULT_SERVICE"
    else
      echo "WARNING: $SERVICE is the selected default display manager but does not exist" >&2
      rm -f "$DEFAULT_SERVICE"
    fi
  else
    rm -f "$DEFAULT_SERVICE"
  fi
fi


if [ "$1" = "configure" ];
then
  invoke-rc.d dbus reload || true
fi

touch /var/log/sddm.log
chown sddm:sddm /var/log/sddm.log

#DEBHELPER#

exit 0

